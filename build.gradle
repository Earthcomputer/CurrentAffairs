plugins {
    id 'fabric-loom' version '0.12-SNAPSHOT'
    id 'maven-publish'
    id 'signing'
    id 'io.codearte.nexus-staging' version '0.30.0'
}

version = project.mod_version
group = project.maven_group

repositories {
    // Add repositories to retrieve artifacts from in here.
    // You should only use this when depending on other mods because
    // Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
    // See https://docs.gradle.org/current/userguide/declaring_repositories.html
    // for more information about repositories.
}

dependencies {
    // To change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    def dep = fabricApi.module('fabric-resource-loader-v0', project.fabric_api_version)
    include dep
    modImplementation dep
}

processResources {
    inputs.property "version", project.version
    filteringCharset "UTF-8"

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

def targetJavaVersion = 17
tasks.withType(JavaCompile).configureEach {
    // ensure that the encoding is set to UTF-8, no matter what the system default is
    // this fixes some edge cases with special characters not displaying correctly
    // see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
    // If Javadoc is generated, this must be specified in that task too.
    it.options.encoding = "UTF-8"
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        it.options.release.set targetJavaVersion
    }
}

java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
    archivesBaseName = project.archives_base_name
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}" }
    }
}

task javadocJar(type: Jar, dependsOn: classes) {
    archiveClassifier.set 'javadoc'
}

// configure the maven publication
publishing {
    repositories {
        maven {
            name = 'nexus'
            url = 'https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/'
            credentials {
                username(project.hasProperty('ossrhUser') ? ossrhUser : 'foo')
                password(project.hasProperty('ossrhPass') ? ossrhPass : 'bar')
            }
        }
        // mavenLocal()
    }

    publications {
        mod(MavenPublication) {
            artifactId 'currentaffairs'
            artifact(remapJar) {
                builtBy remapJar
            }
            artifact(sourcesJar) {
                builtBy sourcesJar
            }
            artifact(javadocJar) {
                builtBy javadocJar
            }
            pom {
                name = 'currentaffairs'
                description = 'CurrentAffairs library mod'
                packaging 'jar'
                inceptionYear = '2022'
                licenses {
                    license {
                        name = 'MIT'
                        url = 'https://github.com/Earthcomputer/CurrentAffairs/blob/master/LICENSE'
                    }
                }
                url = 'https://github.com/Earthcomputer/CurrentAffairs'
                issueManagement {
                    url = 'https://github.com/Earthcomputer/CurrentAffairs/issues'
                }
                scm {
                    connection = 'scm:git:https://github.com/Earthcomputer/CurrentAffairs'
                    developerConnection = 'scm:git:https://github.com/Earthcomputer/CurrentAffairs'
                    url = 'https://github.com/Earthcomputer/CurrentAffairs'
                }
                developers {
                    developer {
                        name = 'Joseph Burton'
                        id = 'Earthcomputer'
                        email = 'burtonjae@hotmail.co.uk'
                        roles = ['Main Developer']
                    }
                }
            }
        }
    }
}

signing {
    sign publishing.publications.mod
}

nexusStaging {
    serverUrl = 'https://s01.oss.sonatype.org/service/local/'
    username = project.hasProperty('ossrhUser') ? ossrhUser : 'foo'
    password = project.hasProperty('ossrhPass') ? ossrhPass : 'bar'
}
closeAndReleaseRepository.mustRunAfter publish

task releaseAll {
    group = 'publishing'
    dependsOn publish
    dependsOn closeAndReleaseRepository
}
